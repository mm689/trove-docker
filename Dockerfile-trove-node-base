ARG BASE_IMAGE=ubuntu:22.04
FROM --platform=linux/x86_64 $BASE_IMAGE

# This file installs node.js, and a load of packages, on a base Ubuntu image.

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

ENV NODE_VERSION 20.15.1
ENV NVM_VERSION=0.39.3
RUN apt-get update \
	# install general utilities used during node-related processes
	&& apt-get install --no-install-recommends -y \
		ca-certificates \
		curl \
		graphviz \
		less \
		make \
		mysql-client \
		netcat-traditional \
		wget \
	&& apt-get clean \
	# Install node via nvm
	&& export NVM_DIR=/usr/local \
	&& (curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v${NVM_VERSION}/install.sh | bash) \
	&& source $NVM_DIR/nvm.sh && nvm install ${NODE_VERSION} \
	&& nvm use v${NODE_VERSION} \
	&& nvm alias default v${NODE_VERSION} \
	&& rm -rf $NVM_DIR/.cache \
	# Alias all executables. We only directly use 'node' but 'npm' can be accessed by modules.
	&& ln -s $NVM_DIR/versions/node/v${NODE_VERSION}/bin/node /usr/local/bin/node \
	&& ln -s $NVM_DIR/versions/node/v${NODE_VERSION}/bin/npm /usr/local/bin/npm \
	&& ln -s $NVM_DIR/versions/node/v${NODE_VERSION}/bin/npx /usr/local/bin/npx \
	&& ln -s $NVM_DIR/versions/node/v${NODE_VERSION}/bin/corepack /usr/local/bin/corepack

# Install yarn
ENV YARN_VERSION 1.22.19
RUN curl -L -o yarn.tar.gz "https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz" && \
	tar -xzf yarn.tar.gz -C /opt/ && \
	rm yarn.tar.gz && \
	ln -s /opt/yarn-v${YARN_VERSION}/bin/yarn /usr/local/bin/yarn && \
	ln -s /opt/yarn-v${YARN_VERSION}/bin/yarnpkg /usr/local/bin/yarnpkg

# Preinstall packages whose binaries need to be accessible from the terminal
RUN yarn global add \
	db-migrate@^0.11.14 \
	db-migrate-mysql@^3.0.0 \
	newman@^6.1.3
